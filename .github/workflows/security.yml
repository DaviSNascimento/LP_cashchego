name: Security Scan
on: [push]

jobs:
  sast:
    runs-on: ubuntu-latest  # Note: Isso roda na nuvem do GitHub, não no seu runner local!
    steps:
      - uses: actions/checkout@v3
      - name: Run Syhunt SAST
        run: |
          # Aqui você precisaria ter o Syhunt instalado no ambiente Ubuntu
          # Como não é seu caso, vamos modificar para usar seu runner local
          
  # VAMOS MODIFICAR PARA USAR SEU RUNNER AUTO-HOSPEDADO
  syhunt-sast:
    runs-on: self-hosted  # Isso fará usar SEU runner local
    steps:
      - uses: actions/checkout@v3
      - name: Run Syhunt from local disk C 
        run: |
          "C:\Users\Davi Nascimento\Documents\Davi\02. Faculdade\5º Semestre\Cybersecurity\Syhunt\Syhunt Community.lnk" scan --target . --api-key=${{ secrets.SYHUNT_API_KEY }} --output=sast-report.html
        shell: cmd  # Usa o shell do Windows
      
      - name: Upload report
        uses: actions/upload-artifact@v4
        with: 
            name: sast-report
            path: sast-report.html  # O Syhunt gera automaticamente


  dast:
    runs-on: self-hosted  # Usa seu runner local
    needs: [syhunt-sast]
    steps:
      - uses: actions/checkout@v3
      
        # DAST (Teste da aplicação rodando)
      - name: Start test server (CMD version)
        run: |
          npm install -g http-server
          start http-server ./ -p 3000
          timeout /t 5 /nobreak > nul
        shell: cmd
          
      - name: Run Syhunt Dynamic Scan
        run: |
          "C:\Users\Davi Nascimento\Documents\Davi\02. Faculdade\5º Semestre\Cybersecurity\Syhunt\Syhunt Community.lnk" scan --target http://localhost:3000 --api-key=${{ secrets.SYHUNT_API_KEY }} --output=dast-report.html
        shell: cmd
        
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: dast-report
          path: dast-report.html  # O Syhunt gera automaticamente
