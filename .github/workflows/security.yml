name: Security Scan
on: [push]

jobs:
  # Análise Estática (SAST) - Rodando no seu computador
  syhunt-sast:
    runs-on: self-hosted  # Usa seu runner local
    steps:
      # 1. Baixa o código do repositório
      - uses: actions/checkout@v3
      
      # 2. Executa a análise SAST com Syhunt
      - name: Run Syhunt SAST Scan
        run: |
          "C:\Users\Davi Nascimento\Documents\Davi\02. Faculdade\5º Semestre\Cybersecurity\Syhunt\syhunt-hybrid.exe" scan --target . --api-key=${{ secrets.SYHUNT_API_KEY }} --output=sast-report.html
        shell: cmd
        
      # 3. Envia o relatório (corrigido o caminho)
      - name: Upload SAST Report
        uses: actions/upload-artifact@v3
        with:
          name: sast-report
          path: |
            sast-report.html  # Agora usando o nome exato do arquivo gerado

  # Análise Dinâmica (DAST) - Teste da aplicação rodando
  syhunt-dast:
    runs-on: self-hosted  # Usa seu runner local
    needs: [syhunt-sast]  # Espera o SAST terminar
    steps:
      # 1. Baixa o código
      - uses: actions/checkout@v3
      
      # 2. Inicia o servidor local (versão corrigida sem PowerShell)
      - name: Start Web Server
        run: |
          npm install http-server -g
          start http-server ./ -p 3000
          timeout /t 5 /nobreak > nul
        shell: cmd
        
      # 3. Executa análise DAST com Syhunt
      - name: Run Syhunt DAST Scan
        run: |
          "C:\Users\Davi Nascimento\Documents\Davi\02. Faculdade\5º Semestre\Cybersecurity\Syhunt\syhunt-dynamic.exe" scan --target http://localhost:3000 --output=dast-report.html
        shell: cmd
        
      # 4. Envia o relatório DAST
      - name: Upload DAST Report
        uses: actions/upload-artifact@v3
        with:
          name: dast-report
          path: dast-report.html  # Nome corrigido
